<?php 
/* Copyright 2011 - 88 Creative Pty Ltd. 
 * Copyright of this program is the property of 88 Creative, 
 * without whose written permission reproduction in
 * whole or in part is prohibited. All rights reserved.
 * http://www.inform8.com
 * http://www.88creative.com.au
 */
?><?php 
class ${table.name}JqGrid { 

	private $def;

	private $gridId;
	private $toolbarId;
	private $pagerId;
	private $quickEditId;
	private $quickSearchFormId;
	
	private $cols = array();

	function __construct($gridId, $quickEditId, $toolbarId, $pagerId, $quickSearchFormId) {
		$this->gridId = $gridId;
		$this->quickEditId = $quickEditId;
		$this->toolbarId = $toolbarId;
		$this->pagerId = $pagerId;
		$this->quickSearchFormId = $quickSearchFormId;
	
		$this->def = new ${table.name}Definition();
		
		#foreach($col in $table.columns)
		  #if(!${col.settings.hasLabel('hidden')})
		    $this->cols[] = '${col.name}';
		  #end
		#end
	}
		
	
	public function getOrderedColumns() {
		$orderedObjs = array();
		
		$objs = ColumnRenderSettingsIQL::select()
			->join(ColumnRenderSettingsIQL::$TABLERENDERSETTINGSID, TableRenderSettingsIQL::$_TABLE, TableRenderSettingsIQL::$TABLERENDERSETTINGSID)
			->where(TableRenderSettingsIQL::$_TABLE, TableRenderSettingsIQL::$TABLENAME, '=', '${table.name}')
			->orderBy(null, ColumnRenderSettingsIQL::$DISPLAYINDEX, 'asc')
			->get();
		
		$ordered = array();
		if(is_array($objs)) {
    		foreach($objs as $obj) {
    			${ds}ordered[] = $obj->getColumnname();
    		}
		}
		
		foreach($this->cols as $col) {
			$found = false;
			foreach($ordered as $tobj) {
				if($tobj == $col){ 
					$found = true;
				}
			}
			if(!$found) {
				${ds}ordered[] = $col;
			}
		}
		return $ordered;
	}
	
	
	private function getColumnNames() {
		$names = "colNames:[" .
			"'" . WebContext::getLanguage()->get('actions') . "'," .
			"'" . WebContext::getLanguage()->get('Tbl_${table.name}_${table.primaryKey.name}') . "'";
		foreach($this->getOrderedColumns() as $col) {
			$names .= "," . "'" . WebContext::getLanguage()->get('Tbl_${table.name}_'. $col) . "'";
		}
		$names .= "],"; 
		return $names;
	}
	

	private function getColumnModel() {
		$model = "colModel:["; 
		$model .= "{name:'EditButtons', jsonmap:'EditButtons', width:80},";
		$model .= "{name:'id', jsonmap:'id', width:${table.primaryKey.settings.getProperty('gridWidth', '50')}, key:true}";
		foreach($this->getOrderedColumns() as $col) {
			$formatter = ($this->def->getTable()->getMember($col)->getForeignKey() != null) ? 'formatTableLink' : 'formatCell';
			$model .= ",{name:'" . $col . "', jsonmap:'$col', width: 100,  formatter: " . $formatter . "}";
		}
		$model .= "],";
		return $model;
	}
	
	
	private function onLoadFunction() {
		$compl = "loadComplete: function(xhr) { ";
		$compl .= "loadGrid('". $this->gridId . "', '" .
			$this->quickEditId . "', '" .
			$this->toolbarId . "', '" .
			$this->quickSearchFormId . "', " .
			"xhr, window.I8.td['${table.name}']);";
		$compl .= "},";
		return $compl;
	}
	
	
	
	public function toString() {
		$grid = "jQuery('#$this->gridId').jqGrid({";
		$grid .= "url:'jsongridrest.php?object=${table.name}&field=ALL&value=ALL',"; 
		$grid .= "datatype: 'json',"; 
		$grid .= $this->getColumnNames();
		$grid .= $this->getColumnModel();
		$grid .= "rowNum:50,";
		$grid .= "width:850,";
		$grid .= "height: 200,";
		$grid .= "ondblClickRow: function(id){ newTab('ajax.php?action=Update&object=${table.name}&id='+id, '" . WebContext::getLanguage()->get('Tbl_${table.name}') . " ' + id );},";
		$grid .= "onSelectRow: function(id){  },";
		$grid .= "rowList:[10,20,50, 100, 200, 500],";
		$grid .= "pager: '#" . $this->pagerId . "',";
		$grid .= "multiselect: true,";
		$grid .= "viewrecords: true,";
		$grid .= "jsonReader: {repeatitems : false, id: '1'},";
		#if (!${table.isOrdered()} && !$table.getParentChildMember())
			$grid .= "sortname: '${table.primaryKey.name}',";
			$grid .= "sortorder: 'asc',";
		#end		
		$grid .= "toolbar: [true,'top'],";
		$grid .= $this->onLoadFunction();
		$grid .= "caption: '". WebContext::getLanguage()->get('Tbl_${table.name}') . "' }); ";
		
		$grid .= "$('#$this->gridId').jqGrid('navGrid','#$this->pagerId',{edit:false,add:false,del:false,refresh:false,search:false});";
		return $grid;
	}


}